name: CI

on:
  push:
    branches:
      - 'main'
      - 'release/*'
  pull_request:
    branches:
      - 'main'
      - 'release/*'

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

  tests:
    name: TESTS
    needs: ci
    runs-on: ubuntu-latest
    container: node:18.14.2
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: yourcast
          POSTGRES_PASSWORD: secret
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install

      - name: Migrations to DB
        run: yarn migrations

  #      - name: Run tests
  #        run: yarn test:e2e
  #        env:
  #          DB_HOST: postgres
  #          DB_PORT: 5432
  #          DB_NAME: yourcast
  #          DB_USERNAME: postgres
  #          DB_PASSWORD: secret

  deploy:
    name: DEPLOY
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag kuchura/your-cast-api:1.0.0

      - name: Docker Push
        run: docker push kuchura/your-cast-api:1.0.0

      - name: Get Branch
        id: branch
        run: echo "git_branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_BRANCH

      - name: Get Hash
        id: hash
        run: echo "git_hash=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_HASH

