name: GitHub Action YourCast CI/CD

on:
  push:
    branches:
      - 'main'
      - 'release/*'
  pull_request:
    branches:
      - 'main'
      - 'release/*'

jobs:
  tests:
    name: TESTS & COVERAGE
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run tests
        run: mvn verify

      - name: Add coverage
        id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: ${{ github.workspace }}/**/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 20
          title: Code Coverage
          update-comment: true

  build:
    name: BUILD DOCKER IMAGE
    needs: [tests, formatting]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -Dmaven.test.skip=true

      - name: Display structure of downloaded files
        run: ls -R

      - name: Temporarily save jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: ${{ github.workspace }}/target/*.jar
          retention-days: 1
  deploy:
    name: DEPLOY DOCKER
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: target/

      - name: docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag kuchura/your-cast-api:1.0.0-$(echo $GITHUB_SHA | cut -c1-7)

      - name: Docker Push
        run: docker push kuchura/your-cast-api:1.0.0-$(echo $GITHUB_SHA | cut -c1-7)